#! /bin/sh
### BEGIN INIT INFO
# Provides:          git-annex assistant
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start git-annex assistant
# Description:       Start git-annex assistant (auto-sync + webapp)
### END INIT INFO

# Author: oliv5 <oliv5@caramail.com>

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Git-annex assistant"
NAME=git-annex
DAEMON=/opt/git-annex.linux/git-annex
DAEMON_START_ARGS="assistant --autostart --startdelay=240 --quiet"
DAEMON_STOP_ARGS="assistant --stop"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
USER=root
NICE="nice -n 19"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	if [ $(pgrep "$NAME" -c) -gt 1 ]; then
		return 1
	fi
	sudo -u $USER sh -c "$NICE $DAEMON $DAEMON_START_ARGS 2>/dev/null"
}

#
# Function that stops the daemon/service
#
do_stop()
{
	if ! pgrep "$NAME" >/dev/null; then
		return 2
	fi
	sudo -u $USER sh -c "$DAEMON $DAEMON_STOP_ARGS" 2>/dev/null || killall $NAME
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|status}" >&2
	exit 3
	;;
esac

:
