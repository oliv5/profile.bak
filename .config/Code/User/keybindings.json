// Personal key bindings
// Oliv5 at caramail dot com
[

//
// Disable defaults
//
{ "key": "ctrl+w",                "command": "" },

//
// User config
//
// Files
{ "key": "ctrl+f5",               "command": "workbench.action.reloadWindow" },

// Panels
{ "key": "ctrl+alt+d",            "command": "workbench.view.debug" },
{ "key": "ctrl+alt+e",            "command": "workbench.view.explorer" },
{ "key": "ctrl+alt+g",            "command": "workbench.view.git" },
{ "key": "ctrl+alt+s",            "command": "workbench.view.search" },
{ "key": "ctrl+alt+f",            "command": "workbench.action.toggleFullScreen" },
{ "key": "ctrl+alt+p",            "command": "workbench.action.togglePanel" },
{ "key": "ctrl+alt+b",            "command": "workbench.action.toggleSidebarVisibility" },
{ "key": "ctrl+alt+q",            "command": "workbench.action.output.toggleOutput" },

// Panels quick bindings
{ "key": "f12",                   "command": "workbench.action.toggleFullScreen" },
{ "key": "shift+f12",             "command": "workbench.action.togglePanel" },
{ "key": "ctrl+f12",              "command": "workbench.action.toggleSidebarVisibility" },
{ "key": "ctrl+shift+f12",        "command": "workbench.action.toggleSidebarPosition" },
{ "key": "ctrl+e",                "command": "workbench.view.explorer" },
{ "key": "escape",                "command": "workbench.action.closeSidebar", "when" : "sideBarFocus" },

// Editors management
{ "key": "ctrl+p",                "command": "workbench.action.quickOpen" },
{ "key": "ctrl+tab",              "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup" },
{ "key": "ctrl+shift+n",          "command": "workbench.action.newWindow" },
{ "key": "ctrl+w ctrl+s",         "command": "workbench.action.splitEditor" },
{ "key": "ctrl+w ctrl+c",         "command": "workbench.action.closeActiveEditor" },
{ "key": "ctrl+f4",               "command": "workbench.action.closeActiveEditor" },
{ "key": "ctrl++",                "command": "workbench.action.zoomIn" },
{ "key": "ctrl+-",                "command": "workbench.action.zoomOut" },

// Undo/redo
{ "key": "ctrl+z",                "command": "undo", "when": "editorTextFocus" },
{ "key": "ctrl+y",                "command": "redo", "when": "editorTextFocus" },
{ "key": "ctrl+shift+z",          "command": "redo", "when": "editorTextFocus" },

// Search & replace
{ "key": "ctrl+f",                "command": "actions.find" },
{ "key": "ctrl+g",                "command": "workbench.view.search" },
{ "key": "ctrl+h",                "command": "editor.action.startFindReplaceAction" },
{ "key": "ctrl+shift+f",          "command": "workbench.action.search.toggleQueryDetails" },
{ "key": "ctrl+shift+g",          "command": "workbench.action.search.toggleQueryDetails" },
{ "key": "alt+c",                 "command": "toggleFindCaseSensitive", "when": "editorFocus" },
{ "key": "alt+r",                 "command": "toggleFindRegex", "when": "editorFocus" },
{ "key": "alt+w",                 "command": "toggleFindWholeWord", "when": "editorFocus" },

// Search navigation
{ "key": "f3",                    "command": "editor.action.nextMatchFindAction", "when": "editorFocus" },
{ "key": "shift+f3",              "command": "editor.action.previousMatchFindAction", "when": "editorFocus" },
{ "key": "f4",                    "command": "editor.action.nextSelectionMatchFindAction", "when": "editorFocus" },
{ "key": "shift+f4",              "command": "editor.action.previousSelectionMatchFindAction", "when": "editorFocus" },

// Cursor navigation
{ "key": "alt+left",              "command": "workbench.action.navigateBack" },
{ "key": "alt+right",             "command": "workbench.action.navigateForward" },
{ "key": "ctrl+j",                "command": "workbench.action.gotoLine" },

// Error markers
{ "key": "f2",                    "command": "editor.action.marker.next", "when": "editorFocus" },
{ "key": "shift+f2",              "command": "editor.action.marker.prev", "when": "editorFocus" },

// Folding
{ "key": "ctrl+u",                "command": "editor.fold", "when": "editorFocus" },
{ "key": "ctrl+shift+u",          "command": "editor.unfold", "when": "editorFocus" },
{ "key": "ctrl+alt+u",            "command": "editor.foldAll", "when": "editorFocus" },
{ "key": "ctrl+alt+shift+u" ,     "command": "editor.unfoldAll", "when": "editorFocus" },

// Intellisense command bar
{ "key": "ctrl+t",              "command": "workbench.action.gotoSymbol" },
{ "key": "ctrl+backspace", "command": "workbench.action.showAllSymbols" },
// Intellisense peek/preview
{ "key": "ctrl+d d",            "command": "editor.action.previewDeclaration", "when": "editorTextFocus" }, // same as editor.action.peekDefinition
{ "key": "ctrl+d c",           "command": "editor.action.goToReferences", "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" }, // same as editor.action.revealDefinition
{ "key": "ctrl+d t",            "command": "editor.action.goToReferences", "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" }, // same as editor.action.revealDefinition
{ "key": "ctrl+d backspace",  "command": "editor.action.goToReferences", "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" }, // same as editor.action.revealDefinition
// Intellisense goto
{ "key": "ctrl+enter",      "command": "editor.action.goToDeclaration", "when": "editorTextFocus" },

// Cscope: https://github.com/SeungukShin/cscope-code
//{ "key": "ctrl+d ctrl+d",         "command": "extension.cscope-code.definition", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+c",         "command": "extension.cscope-code.caller", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+e",         "command": "extension.cscope-code.callee", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+backspace", "command": "extension.cscope-code.symbol", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+t",         "command": "extension.cscope-code.symbol", "when": "editorTextFocus" },

// Cscope: https://github.com/xulion/scope4code
{ "key": "ctrl+d ctrl+d",         "command": "extension.findDefinition", "when": "editorTextFocus" },
{ "key": "ctrl+d ctrl+c",         "command": "extension.findCaller", "when": "editorTextFocus" },
{ "key": "ctrl+d ctrl+e",         "command": "extension.findCallee", "when": "editorTextFocus" },
{ "key": "ctrl+d ctrl+backspace", "command": "extension.findSymbol", "when": "editorTextFocus" },
{ "key": "ctrl+d ctrl+t",         "command": "extension.findSymbol", "when": "editorTextFocus" },
{ "key": "ctrl+d ctrl+g",         "command": "extension.findText", "when": "editorTextFocus" },
{ "key": "ctrl+d ctrl+i",         "command": "extension.findInclude", "when": "editorTextFocus" },

// Tags
// https://stackoverflow.com/questions/50725243/vscode-how-to-keybind-an-external-command/50749571#50749571
// https://stackoverflow.com/questions/52786022/shortcut-for-running-terminal-command-in-vs-code
{ "key": "ctrl+alt+t",         "command": "workbench.action.terminal.sendSequence", "args": { "text": "mkalltags . \u000D" }},

// Comments
{ "key": "ctrl+q",                "command": "editor.action.commentLine", "when": "editorTextFocus" },
{ "key": "ctrl+shift+q",          "command": "editor.action.blockComment", "when": "editorTextFocus" },

// Extension tomhultonharrop.switch-corresponding
{ "key": "ctrl+b",                "command": "extension.switch_corresponding_same_workspace", "when": "editorTextFocus" },
{ "key": "ctrl+shift+b",          "command": "extension.switch_corresponding", "when": "editorTextFocus" },

//
// Tests & automatically added by vscode itself
//
{ "key": "alt+q",                 "command":"workbench.action.output.toggleOutput" },

]
