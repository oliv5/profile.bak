// Personal key bindings
// Oliv5 at caramail dot com
[

//////////////////////////////////////////////////
// Default keymaps

// Disable defaults
{ "key": "ctrl+w",                "command": "" },
{ "key": "f7",                    "command": "" },
{ "key": "f8",                    "command": "" },
{ "key": "f11",                   "command": "" },

// Focus
{ "key": "escape",                "command": "workbench.action.focusActiveEditorGroup", "when":"panelFocus || sideBarFocus" },
//{ "key": "escape",                "command": "workbench.action.closeSidebar", "when" : "sideBarFocus" },

// F12 bar toggling
{ "key": "f12",                   "command": "extension.multiCommand.execute", "args":
    { "sequence": [ "workbench.action.closeSidebar", "workbench.action.closePanel" ] } },
{ "key": "shift+f12",             "command": "workbench.action.toggleSidebarVisibility" },
{ "key": "alt+f12",               "command": "workbench.action.toggleActivityBarVisibility" },
{ "key": "ctrl+f12",              "command": "workbench.action.togglePanel" },
{ "key": "ctrl+shift+f12",        "command": "workbench.action.toggleFullScreen" },

// Sidebar
// Exception: the search bar is managed somewhere else
{ "key": "ctrl+alt+b",            "command": "workbench.action.toggleSidebarVisibility" },
{ "key": "ctrl+alt+d",            "command": "workbench.view.debug" },
{ "key": "ctrl+alt+d",            "command": "workbench.action.closeSidebar", "when" : "sideBarFocus" },
{ "key": "ctrl+alt+e",            "command": "workbench.view.extensions" },
{ "key": "ctrl+alt+e",            "command": "workbench.action.closeSidebar", "when" : "sideBarFocus" },
{ "key": "ctrl+alt+g",            "command": "workbench.view.scm" },
{ "key": "ctrl+alt+g",            "command": "workbench.action.closeSidebar", "when" : "sideBarFocus" },
{ "key": "ctrl+alt+s",            "command": "workbench.view.search" },
{ "key": "ctrl+alt+s",            "command": "workbench.action.closeSidebar", "when" : "sideBarFocus" },
{ "key": "ctrl+e",                "command": "workbench.view.explorer" },
{ "key": "ctrl+e",                "command": "workbench.action.closeSidebar", "when" : "sideBarFocus" },

// Panel
{ "key": "ctrl+escape",           "command": "extension.multiCommand.execute", "args":
    { "sequence": [ "workbench.action.closeSidebar", "workbench.action.closePanel" ] } },
{ "key": "ctrl+alt+p",            "command": "workbench.action.togglePanel" },
{ "key": "ctrl+alt+y",            "command": "workbench.debug.action.toggleRepl" },
{ "key": "ctrl+alt+o",            "command": "workbench.action.output.toggleOutput" },
{ "key": "ctrl+alt+t",            "command": "workbench.action.terminal.toggleTerminal" },

// Quick actions (searches / navigate)
{ "key": "ctrl+tab",              "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup" },
{ "key": "ctrl+[backquote]",      "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup" },
{ "key": "ctrl+shift+[backquote]","command": "workbench.action.openNextRecentlyUsedEditorInGroup" },
{ "key": "ctrl+p",                "command": "workbench.action.quickOpen" },
{ "key": "ctrl+shift+p",          "command": "workbench.action.showCommands" },
{ "key": "ctrl+o",                "command": "workbench.action.showAllEditorsByMostRecentlyUsed" }, // MRU files
{ "key": "ctrl+shift+o",          "command": "workbench.action.openRecent" }, // MRU workspaces
{ "key": "ctrl+t",                "command": "workbench.action.gotoSymbol" },
{ "key": "ctrl+shift+t",          "command": "workbench.action.showAllSymbols" },

// Cursor/focus navigation
{ "key": "alt+left",              "command": "workbench.action.navigateBack" },
{ "key": "alt+right",             "command": "workbench.action.navigateForward" },
{ "key": "ctrl+left",             "command": "workbench.action.navigateLeft" },
{ "key": "ctrl+right",            "command": "workbench.action.navigateRight" },
{ "key": "ctrl+up",               "command": "workbench.action.navigateUp" },
{ "key": "ctrl+down",             "command": "workbench.action.navigateDown" },
{ "key": "ctrl+j",                "command": "workbench.action.gotoLine" },

// Views (a.k.a windows) management
{ "key": "ctrl+w ctrl+n",         "command": "workbench.action.newWindow" },
{ "key": "ctrl+w ctrl+up",        "command": "workbench.action.focusAboveGroup" },
{ "key": "ctrl+w ctrl+down",      "command": "workbench.action.focusBelowGroup" },
{ "key": "ctrl+w ctrl+left",      "command": "workbench.action.focusLeftGroup" },
{ "key": "ctrl+w ctrl+right",     "command": "workbench.action.focusRightGroup" },
{ "key": "ctrl+w up",             "command": "views.moveViewUp" },
{ "key": "ctrl+w down",           "command": "views.moveViewDown" },
{ "key": "ctrl+w left",           "command": "views.moveViewLeft" },
{ "key": "ctrl+w right",          "command": "views.moveViewRight" },
{ "key": "ctrl+w ctrl+s",         "command": "workbench.action.splitEditor" },
{ "key": "ctrl+w shift+s",        "command": "workbench.action.splitEditorDown" },
{ "key": "ctrl+w ctrl+c",         "command": "workbench.action.joinTwoGroups" },
{ "key": "ctrl+w ctrl+q",         "command": "workbench.action.joinAllGroups" },

// Go back to editor, stop debugging, close all other windows/panels/bars
{ "key": "ctrl+w ctrl+w",         "command": "extension.multiCommand.execute", "args":
    { "sequence": [ "workbench.action.debug.stop", "workbench.action.closePanel", "workbench.action.closeSidebar" ] } },

// Zooms
{ "key": "ctrl++",                "command": "workbench.action.zoomIn" },
{ "key": "ctrl+-",                "command": "workbench.action.zoomOut" },

// File management
{ "key": "ctrl+shift+f4",         "command": "workbench.action.closeActiveEditor" },

// Undo/redo
{ "key": "ctrl+z",                "command": "undo", "when": "editorTextFocus" },
{ "key": "ctrl+y",                "command": "redo", "when": "editorTextFocus" },
{ "key": "ctrl+shift+z",          "command": "redo", "when": "editorTextFocus" },
{ "key": "ctrl+shift+r",          "command": "workbench.action.files.revert", "when": "editorTextFocus" },

// Error markers
{ "key": "f1",                    "command": "editor.action.marker.nextInFiles" },
{ "key": "f1",                    "command": "-workbench.action.showCommands" },
{ "key": "shift+f1",              "command": "editor.action.marker.prevInFiles", "when": "editorFocus" },
{ "key": "ctrl+f1",               "command": "workbench.actions.view.problems", "when": "workbench.panel.markers.view.active" },

// Quick selection & multi-cursor
{ "key": "f2",                    "command": "editor.action.addSelectionToNextFindMatch", "when": "editorFocus" },
{ "key": "shift+f2",              "command": "editor.action.addSelectionToPreviousFindMatch", "when": "editorFocus" },
{ "key": "ctrl+shift+f2",         "command": "editor.action.selectHighlights", "when": "editorFocus" },

// Quick match: search & replace in current file
{ "key": "ctrl+f",                "command": "actions.find" },
{ "key": "ctrl+h",                "command": "editor.action.startFindReplaceAction" },
// Quick match options
{ "key": "alt+c",                 "command": "toggleFindCaseSensitive", "when": "editorFocus" },
{ "key": "alt+r",                 "command": "toggleFindRegex", "when": "editorFocus" },
{ "key": "alt+w",                 "command": "toggleFindWholeWord", "when": "editorFocus" },
// Quick match navigation
{ "key": "f3",                    "command": "editor.action.nextMatchFindAction", "when": "editorFocus && !editorHasSelection" },
{ "key": "f3",                    "command": "editor.action.nextSelectionMatchFindAction", "when": "editorFocus && editorHasSelection" },
{ "key": "shift+f3",              "command": "editor.action.previousMatchFindAction", "when": "editorFocus && !editorHasSelection" },
{ "key": "shift+f3",              "command": "editor.action.previousSelectionMatchFindAction", "when": "editorFocus && editorHasSelection" },

// Search bar: search & replace in all files
{ "key": "ctrl+g",                "command": "workbench.view.search" },
{ "key": "ctrl+g",                "command": "workbench.action.closeSidebar", "when" : "sideBarFocus" },
// Search bar: navigation
{ "key": "f4",                    "command": "search.action.focusNextSearchResult", "when": "editorFocus && hasSearchResult" },
{ "key": "shift+f4",              "command": "search.action.focusPreviousSearchResult", "when": "editorFocus && hasSearchResult" },
{ "key": "ctrl+f4",               "command": "search.action.clearSearchResults", "when": "hasSearchResult" },

// Folding
{ "key": "ctrl+u",                "command": "editor.fold", "when": "editorFocus" },
{ "key": "ctrl+shift+u",          "command": "editor.unfold", "when": "editorFocus" },
{ "key": "ctrl+alt+u",            "command": "editor.foldAll", "when": "editorFocus" },
{ "key": "ctrl+alt+shift+u" ,     "command": "editor.unfoldAll", "when": "editorFocus" },

// Comments
{ "key": "ctrl+q",                "command": "editor.action.commentLine", "when": "editorTextFocus" },
{ "key": "ctrl+shift+q",          "command": "editor.action.blockComment", "when": "editorTextFocus" },

// Intellisense peek/preview
{ "key": "ctrl+backspace",        "command": "editor.action.revealDefinition", "when": "editorTextFocus" }, // same as editor.action.peekDefinition / editor.action.previewDeclaration ?
{ "key": "ctrl+d ctrl+d",         "command": "editor.action.revealDefinition", "when": "editorTextFocus" }, // same as editor.action.peekDefinition / editor.action.previewDeclaration ?
{ "key": "ctrl+shift+backspace",  "command": "editor.action.goToReferences", "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
{ "key": "ctrl+d ctrl+c",         "command": "editor.action.goToReferences", "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
// Intellisense goto
{ "key": "ctrl+enter",            "command": "editor.action.goToDeclaration", "when": "editorTextFocus" },

// Quickfix proposals
{ "key": "ctrl+shift+space",      "command": "editor.action.quickFix", "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },
{ "key": "ctrl+shift+[Comma]",    "command": "-editor.action.quickFix", "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },
{ "key": "ctrl+shift+space",      "command": "problems.action.showQuickFixes", "when": "problemFocus" },
{ "key": "ctrl+shift+[Comma]",    "command": "-problems.action.showQuickFixes", "when": "problemFocus" },

// Debugger
{ "key": "f5",                    "command": "workbench.action.debug.start", "when": "!inDebugMode" },
{ "key": "f5",                    "command": "workbench.action.debug.continue", "when": "inDebugMode" },
{ "key": "f5",                    "command": "workbench.action.debug.pause", "when": "debugState == 'running'" },
{ "key": "shift+f5",              "command": "workbench.action.debug.stop", "when": "inDebugMode" },
{ "key": "ctrl+f5",               "command": "workbench.action.debug.restart", "when": "inDebugMode" },
{ "key": "ctrl+shift+f5",         "command": "editor.debug.action.runToCursor", "when": "inDebugMode" },
{ "key": "f10",                   "command": "workbench.action.debug.stepOver", "when": "inDebugMode" },
{ "key": "shift+f10",             "command": "workbench.action.debug.stepInto", "when": "inDebugMode" },
{ "key": "ctrl+f10",              "command": "workbench.action.debug.stepOut", "when": "inDebugMode" },
{ "key": "ctrl+shift+f10",        "command": "editor.debug.action.runToCursor", "when": "inDebugMode" },
{ "key": "f9",                    "command": "editor.debug.action.toggleBreakpoint" },
{ "key": "ctrl+f9",               "command": "workbench.debug.viewlet.action.disableAllBreakpoints" },
{ "key": "shift+f9",              "command": "workbench.debug.viewlet.action.enableAllBreakpoints" },
{ "key": "ctrl+shift+f9",         "command": "workbench.debug.viewlet.action.removeAllBreakpoints" },

// Tasks
{ "key": "f6",                    "command": "workbench.action.tasks.build", "when": "!inDebugMode" },
{ "key": "shift+f6",              "command": "workbench.action.tasks.runTask", "when": "!inDebugMode", "args": "Make clean" },
{ "key": "ctrl+f6",               "command": "workbench.action.tasks.test", "when": "!inDebugMode" },
// { "key": "f6",                    "command": "extension.multiCommand.execute", "when": "inDebugMode", "args":
    // { "sequence": [ "workbench.action.debug.stop", "workbench.action.tasks.build", "workbench.action.debug.start" ] } },

//////////////////////////////////////////////////
// Extensions

// Build & debugging
//{ "key": "shift+f5",            "command": "extension.multiCommand.execute", "args":
//    { "sequence": [ "workbench.action.debug.stop", "workbench.action.closePanel", "workbench.action.closeSidebar" ] } }

// Cscope: https://github.com/SeungukShin/cscope-code
//{ "key": "ctrl+d ctrl+d",         "command": "extension.cscope-code.definition", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+c",         "command": "extension.cscope-code.caller", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+e",         "command": "extension.cscope-code.callee", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+backspace", "command": "extension.cscope-code.symbol", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+t",         "command": "extension.cscope-code.symbol", "when": "editorTextFocus" },

// Cscope: https://github.com/xulion/scope4code
//{ "key": "ctrl+d ctrl+b",         "command": "extension.build", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+d",         "command": "extension.findDefinition", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+c",         "command": "extension.findCaller", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+e",         "command": "extension.findCallee", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+backspace", "command": "extension.findSymbol", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+t",         "command": "extension.findSymbol", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+g",         "command": "extension.findText", "when": "editorTextFocus" },
//{ "key": "ctrl+d ctrl+i",         "command": "extension.findInclude", "when": "editorTextFocus" },

// Tags
// https://stackoverflow.com/questions/50725243/vscode-how-to-keybind-an-external-command/50749571#50749571
// https://stackoverflow.com/questions/52786022/shortcut-for-running-terminal-command-in-vs-code
{ "key": "ctrl+alt+b",            "command": "workbench.action.terminal.sendSequence", "args": { "text": "mkalltags . \u000D" }},

// Extension tomhultonharrop.switch-corresponding
{ "key": "ctrl+b ctrl+b",         "command": "extension.switch_corresponding_same_workspace", "when": "editorTextFocus" },

// Extension edit with shell (run shell command on selection)
{ "key": "ctrl+i",                "command": "editWithShell.runCommand" },

//////////////////////////////////////////////////
// Added by vscode automatically, first is a placeholder
{
    "key": "",
    "command": ""
},

]
