if [ -n "$BASH_VERSION" ];then str_replace(){ echo "${1//$2/$3}";};else str_replace(){ echo "$1"|sed -e "s/$2/$3/";};fi;alias tolower='str_low';str_low(){ echo "${@}"|tr "[:upper:]" "[:lower:]";};str_lowfirst(){ echo "${@}"|sed 's/.*/\l&/';};alias toupper='str_upper';str_up(){ echo "${@}"|tr "[:lower:]" "[:upper:]";};str_upfirst(){ echo "${@}"|sed 's/.*/\u&/';};str_prefix(){ local PATTERN="$1";shift;for STR;do [ "$STR" = "${STR#$PATTERN}" ]&&return 1;done;return 0;};str_suffix(){ local PATTERN="$1";shift;for STR;do [ "$STR" = "${STR%$PATTERN}" ]&&return 1;done;return 0;};alias str_isin='str_substring';str_substring(){ local STR="$1";shift;case "$*" in *${STR}*)return 0;;esac;return 1;};str_trim(){ echo "$@"|sed -e 's/\(^\s*\|\s*$\)//g';};str_triml(){ echo "$@"|sed -e 's/^\s*//g';};str_trimr(){ echo "$@"|sed -e 's/\s*$//g';};str_len(){ for STR;do echo ${#STR};done;};alias str_uniqw='str_uniq " " " "';str_uniq(){ local _IFS="${1:- }";local _OFS="${2}";shift 2;printf '%s' "$@"|awk -vRS="$_IFS" -vORS="$_OFS" '!seen[$0]++ {str=str$1ORS} END{sub(ORS"$", "", str);printf "%s\n",str}';};str_filter_uniq(){ { [ $# -gt 0 ]&&echo "$@"||cat /dev/stdin;}|awk -vRS="${RS:-\n}" '{cnt[$1]++}END{for(s in cnt){if(cnt[s]==1){print s}}}';};str_filter_duplicate(){ { [ $# -gt 0 ]&&echo "$@"||cat /dev/stdin;}|sort|uniq -d;}