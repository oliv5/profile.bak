bwctrl0='sudo ethtool';bwctrl1='sudo wondershaper';bwctrl2='trickle';bwctrl3='pv -L';alias ipv4_disable='for V in $(sysctl -a -N -r "net.ipv4.conf.*.disable_ipv4");do sudo sysctl -w $V=1;done';alias ipv4_enable='for V in $(sysctl -a -N -r "net.ipv4.conf.*.disable_ipv4");do sudo sysctl -w $V=0;done';alias ipv6_disable='for V in $(sysctl -a -N -r "net.ipv6.conf.*.disable_ipv6");do sudo sysctl -w $V=1;done';alias ipv6_enable='for V in $(sysctl -a -N -r "net.ipv6.conf.*.disable_ipv6");do sudo sysctl -w $V=0;done';alias ipv4_disable_persistent='sudo sed -i -e "s/disable_ipv4\s*=.*/disable_ipv4 = 1/" /etc/sysctl.conf';alias ipv4_enable_persistent='sudo sed -i -e "s/disable_ipv4\s*=.*/disable_ipv4 = 0/" /etc/sysctl.conf';alias ipv6_disable_persistent='sudo sed -i -e "s/disable_ipv6\s*=.*/disable_ipv6 = 1/" /etc/sysctl.conf';alias ipv6_enable_persistent='sudo sed -i -e "s/disable_ipv6\s*=.*/disable_ipv6 = 0/" /etc/sysctl.conf';net_itf_exists(){ ip addr show dev "$1">/dev/null 2>$1;};net_itf_up(){ ip addr show dev "$1" 2>/dev/null|head -n 1|grep "UP">/dev/null;};net_itf_down(){ ip addr show dev "$1" 2>/dev/null|head -n 1|grep "DOWN">/dev/null;};iptables_ls(){ for TABLE in filter nat mangle raw security;do echo "** Table $TABLE **";sudo iptables -vL -t $TABLE;done;};iptables_flush(){ sudo iptables -t filter -P INPUT ACCEPT;sudo iptables -t filter -P FORWARD ACCEPT;sudo iptables -t filter -P OUTPUT ACCEPT;for TABLE in filter nat mangle raw security;do sudo iptables -t $TABLE -F;sudo iptables -t $TABLE -X;done;};alias dhcp_renew='sudo dhclient -r;sudo dhclient -1';ip_addr_get(){ local FILTER="${1:-inet}";if [ $# -gt 1 ];then shift;for DEV;do ip address show dev "$DEV";done;else ip address;fi|awk "/$FILTER/ {print \$2}";};ipv4_addr_get(){ ip_addr_get "inet " "$@";};ipv6_addr_get(){ ip_addr_get "inet6" "$@";};ip_monit(){ for DEV;do sh -c "ip monitor address dev '$DEV'"&done;};ip_monit_new(){ for DEV;do sh -c "ip monitor address dev '$DEV' | awk '! /Deleted/ && /inet/ {system(\". ip.monit.send.sh '$DEV' \" \$4 )}' "&done;};ip_monit_del(){ for DEV;do sh -c "ip monitor address dev '$DEV' | awk '/Deleted/ && /inet/ {system(\". ip.monit.send.sh '$DEV' \" \$4 )}' "&done;};ipv6_supported(){ test -f /proc/net/if_inet6&&echo "IPv6 supported"||echo "IPv6 not supported";};ipv6_enabled(){ sysctl -a 2>/dev/null|grep disable_ipv6;};alias wget_mirror='wget --mirror --convert-links --adjust-extension --page-requisites --no-parent';alias wget_flat='wget_mirror -nd';alias wget_flatflat='wget_mirror -nd -nH';wget_ext(){ local URL="${1:?No url specified...}";local EXT="${2:?No extension specified...}";shift 2;wget -r -l1 -H -t1 -nd -N -np --follow-ftp -erobots=off -A$EXT "$URL" "$@";};wget_ls(){ wget --spider --force-html --no-directories --no-parent -r -l2 "${@:?No url specified...}" 2>&1|awk '/^--/{print $3}';};alias html_topdf='wkhtmltopdf --margin-bottom 20mm --margin-top 20mm --minimum-font-size 16';wget_pdf(){ local NAME;wget_ls "$@"|while IFS= read -r URL;do NAME="${URL%/index.html}";NAME="${NAME%/}";NAME="${NAME##*/}";echo "Processing $URL";wkhtmltopdf --margin-bottom 20mm --margin-top 20mm --minimum-font-size 16 "$URL" "${NAME:-index}.pdf";done;};date_fromweb(){ for WEBSERVER;do curl -sD - "$WEBSERVER"|grep '^Date:'|cut -d' ' -f3-6;done;};send_mail(){ local DEST="${1:?No dest email address specified}";local SUBJECT="${2:?No subject specified}";local CONTENT="${3:?No content specified}";local ATTACH="$4";local CC="$5";local BCC="$6";local FROM="$7";local SMTP="$8";if command -v mutt>/dev/null;then echo "$CONTENT"|mutt ${ATTACH:+-a "$ATTACH"} ${SUBJECT:+-s "$SUBJECT"} -- ${DEST}&&echo "Email sent";elif command -v mail>/dev/null;then echo "$CONTENT"|mail ${SUBJECT:+-s "$SUBJECT"} ${DEST}&&echo "Email sent";elif command -v sendmail>/dev/null;then echo "$CONTENT"|sendmail ${DEST}&&echo "Email sent";elif command -v sendemail>/dev/null;then sendemail -q -u "$CONTENT" -f "${FROM:-$USER}" -t "$DEST" ${SMTP:+-s $SMTP}&&echo "Email sent";else echo "No mail program found";return 1;fi;return 0;};socat_bounce(){ socat ${5:-tcp}-listen:${1:+$1,}${2:+bind=$2},su=nobody,fork,reuseaddr ${3:+${5:-tcp}:$3${4:+:$4}};};get_extip(){ local DNSLOOKUP="ifconfig.me/ip";if command -v curl>/dev/null 2>&1;then curl -s "$DNSLOOKUP";elif command -v wget>/dev/null 2>&1;then wget -qO- "$DNSLOOKUP";else local HOST="${DNSLOOKUP%%/*}";local URL="${DNSLOOKUP#*/}";exec 3</dev/tcp/$HOST/80;echo>&3<< EOL
GET /$URL HTTP/1.1
connection: close
host: $HOST
EOL
grep -oE '([0-9]+\.){3}[0-9]+'<&3;fi;};opened_port_out(){ for PORT;do if command -v nc>/dev/null 2>&1;then nc -v portquiz.net "$PORT";elif command -v telnet>/dev/null 2>&1;then telnet portquiz.net "$PORT";elif command -v curl>/dev/null 2>&1;then curl "portquiz.net:$PORT";elif command -v wget>/dev/null 2>&1;then wget -qO- "portquiz.net:$PORT";elif command -v mimeopen>/dev/null 2>&1;then mimeopen "http://portquiz.net:$PORT";else echo "No suitable command found.";echo "Open your borwser at: http://portquiz.net:$PORT";fi;done;};opened_port_in(){ local HOST="${1:-$(get_extip)}";local PORT1="${2:-80}";local PORT2="${3:-$PORT1}";if command -v curl>/dev/null 2>&1;then curl -s --request POST 'http://www.ipfingerprints.com/scripts/getPortsInfo.php' --data "remoteHost=$HOST" --data "start_port=$PORT1" --data "end_port=$PORT2" -d normalScan=Yes -d scan_type=connect -d ping_type=none|grep -o open;else echo "No suitable command found.";echo "Open your borwser at: http://www.ipfingerprints.com/portscan.php";fi;};ssh_sudo_askpass(){ local SSH_OPTS="${1:?No ssh server/opts specified...}";shift;ask_passwd|ssh -tt "$SSH_OPTS" 'cat -|sudo -S "$@"';};ssh_ping(){ local SSH_OPTS="${SSH_OPTS:+$SSH_OPTS }${1:?No server or ssh option specified...}";shift;ssh $SSH_OPTS -- echo pong;};ssh_sudo(){ local SSH_OPTS="${SSH_OPTS:+$SSH_OPTS }${1:?No server or ssh option specified...}";shift;ssh -t $SSH_OPTS -- sudo "$@";};ssh_aria2(){ local SSH_OPTS="${SSH_OPTS:+$SSH_OPTS }${1:?No server or ssh option specified...}";local DIR="${2:?No output folder specified...}";shift 2;ssh -t $SSH_OPTS -- sh -c "cd \"$DIR\"; aria2c \"$@\"";};ssh_youtubedl(){ local SSH_OPTS="${SSH_OPTS:+$SSH_OPTS }${1:?No server or ssh option specified...}";local DIR="${2:?No output folder specified...}";shift 2;ssh -t $SSH_OPTS -- sh -c "cd \"$DIR\"; youtubedl \"$@\"";};sshh(){ command ssh "$@";};sshh_ping(){ ssh(){ sshh "$@";};ssh_ping "$@";};sshh_sudo(){ ssh(){ sshh "$@";};ssh_sudo "$@";};sshh_aria2(){ ssh(){ sshh "$@";};ssh_aria2 "$@";};sshh_youtubedl(){ ssh(){ sshh "$@";};ssh_youtubedl "$@";};sshh_tunnel_open(){ ssh(){ sshh "$@";};ssh_tunnel_open "$@";};sshh_proxify(){ ssh(){ sshh "$@";};ssh_proxify "$@";};sshh_proxify_ff(){ ssh(){ sshh "$@";};ssh_proxify_ff "$@";};sshh_torify(){ ssh(){ sshh "$@";};ssh_torify "$@";};sshh_torify_ff(){ ssh(){ sshh "$@";};ssh_torify_ff "$@";};sshh_socat_vpn_p2p(){ ssh(){ sshh "$@";};ssh_socat_vpn_p2p "$@";};sshh_socat_vpn(){ ssh(){ sshh "$@";};ssh_socat_vpn "$@";};sshh_vpn(){ ssh(){ sshh "$@";};ssh_vpn "$@";};sshh_shuttle(){ ssh(){ sshh "$@";};ssh_shuttle "$@";};alias ssh_tunnel='ssh -fnxNT';_ssh_tunnel_open(){ local SSHOPTS="${1:?No ssh options specified...}";local SERVER="${2:?No server specified...}";shift 2;local TUNNEL="";for PORT;do PORT="$(echo "$PORT"|tr -d '-')";TYPE="$(echo "$PORT"|cut -c 1)";[ "$TYPE" != "L" -a "$TYPE" != "R" -a "$TYPE" != "D" ]&&TYPE="L";set -- $(echo "${PORT#$TYPE}"|tr ':' ' ');if [ "$TYPE" = "D" ];then TUNNEL="${TUNNEL:+$TUNNEL }-$TYPE $1";else TUNNEL="${TUNNEL:+$TUNNEL }-$TYPE $1:${2:-127.0.0.1}:${3:-$1}";fi;done;ssh -${SSHOPTS} -nxNT "$SERVER" $TUNNEL;};ssh_tunnel_open(){ _ssh_tunnel_open -f "$@";};ssh_tunnel_open4(){ _ssh_tunnel_open -f4 "$@";};ssh_tunnel_close(){ for PORT;do local LPORT="${PORT%%:*}";pgrep -f "ssh.* -(L|R) ?${LPORT}:"|xargs -r kill -9;pgrep -f "ssh.* -D ?$LPORT"|xargs -r kill -9;done;};ssh_tunnel_ls(){ ps -ef|grep -E "ssh.* -(L|R|D) [0-9]*"|grep -v grep;};ssh_socat_vpn_p2p(){ local RELAY_ADDR="${1:?No relay address specified...}";local RELAY_PORT="${2:-16000}";local VPN_ADDR_SRV="${3:-192.168.9.1/24}";local VPN_ADDR_CLIENT="${4:-192.168.9.2/24}";local BACKGROUND="${5:+-b}";ssh_sudo "$RELAY_ADDR" -b socat "tcp-listen:$RELAY_PORT,reuseaddr" "tun:$VPN_ADDR_SRV,up";ssh -fxT -L "$RELAY_PORT:127.0.0.1:$RELAY_PORT" "$RELAY_ADDR" sleep 30;sudo $BACKGROUND socat "tcp:127.0.0.1:$RELAY_PORT" "tun:$VPN_ADDR_CLIENT,up";};ssh_socat_vpn(){ local RELAY_ADDR="${1:?No relay address specified...}";local RELAY_PORT="${2:-16000}";local VPN_ADDR_SRV="${3:-192.168.9.1/24}";local VPN_ADDR_CLIENT="${4:-192.168.9.2/24}";local LOCAL_TUN="${5:-tun0}";local REMOTE_ITF="${6:-eth0}";local LOCAL_ROUTES="$7";ssh_sudo "$RELAY_ADDR" -b sh -c "\"
    echo 1 > /proc/sys/net/ipv4/ip_forward
    iptables -t nat -A POSTROUTING -o $REMOTE_ITF -j MASQUERADE
    socat \"tcp-listen:$RELAY_PORT,reuseaddr\" \"tun:$VPN_ADDR_SRV,up\"
    iptables -t nat -D POSTROUTING -o $REMOTE_ITF -j MASQUERADE
  \"" _;ssh -fxT -L "$RELAY_PORT:127.0.0.1:$RELAY_PORT" "$RELAY_ADDR" sleep 30;sudo socat "tcp:127.0.0.1:$RELAY_PORT" "tun:$VPN_ADDR_CLIENT,up"&sleep 1;sudo ip route add "VPN_ADDR_SRV" via "${VPN_ADDR_SRV%/*}";for ROUTE in $LOCAL_ROUTES;do sudo ip route add "$ROUTE" dev "$LOCAL_TUN" via "${VPN_ADDR_SRV%/*}";done;echo "ctrl-c to stop vpn";wait;};ssh_vpn(){ local RELAY_ADDR="${1:?No relay address specified...}";local LOCAL_ROUTES="$2";local LOCAL_ADDR="${3:-192.168.99.2/24}";local LOCAL_TUN="${4:-99}";local REMOTE_ADDR="${5:-192.168.99.1/24}";local REMOTE_TUN="${6:-99}";local REMOTE_OUTPUT_ITF="${7:-eth0}";sudo ip tuntap add "tun$LOCAL_TUN" mode tun;sudo ip addr add "$LOCAL_ADDR" dev "tun$LOCAL_TUN";sudo ip link set dev "tun$LOCAL_TUN" up;ssh_sudo "$RELAY_ADDR" -b sh -c "\"
    echo 1 > /proc/sys/net/ipv4/ip_forward
    iptables -t nat -A POSTROUTING -o $REMOTE_OUTPUT_ITF -j MASQUERADE
    sudo ip tuntap add \"tun$REMOTE_TUN\" mode tun
    sudo ip addr add \"$REMOTE_ADDR\" dev \"tun$REMOTE_TUN\"
    sudo ip link set dev \"tun$REMOTE_TUN\" up
  \"" _;ssh -f -w "${LOCAL_TUN}:${REMOTE_TUN}" "$RELAY_ADDR" true;sleep 1;sudo ip route add "$REMOTE_ADDR" via "${REMOTE_ADDR%/*}";for ROUTE in $LOCAL_ROUTES;do sudo ip route add "$ROUTE" via "${REMOTE_ADDR%/*}";done;echo "ctrl-c to stop vpn";read _;pgrep -f "ssh.* -w ${LOCAL_TUN}:${REMOTE_TUN}"|xargs -r kill;ssh_sudo "$RELAY_ADDR" -b sh -c "\"
    iptables -t nat -D POSTROUTING -o $REMOTE_OUTPUT_ITF -j MASQUERADE
    sudo ip link set dev \"tun$REMOTE_TUN\" down
    sudo ip tuntap delete \"tun$REMOTE_TUN\" mode tun
  \"" _;sudo ip link set dev "tun$REMOTE_TUN" down;sudo ip tuntap delete "tun$REMOTE_TUN" mode tun;};firefox_set_proxy(){ local PORT="${1:-16000}";local PROFILE="${2:-$HOME/.mozilla/firefox/profile.proxy}";local NAME="${3:-$(basename "$PROFILE")}";firefox -CreateProfile "$NAME $PROFILE";mkdir -p "$PROFILE";[ -f "$PROFILE/user.js" ]&&sed -e '/network.proxy.type/d' -e '/network.proxy.socks/d' -e '/network.proxy.socks_port/d' -e '/network.proxy.socks_remote_dns/d' -e '/network.proxy.socks_version/d' "$PROFILE/user.js";echo 'user_pref("network.proxy.type",1);'>>"$PROFILE/user.js";echo 'user_pref("network.proxy.socks","127.0.0.1");'>>"$PROFILE/user.js";echo 'user_pref("network.proxy.socks_port",'$PORT');'>>"$PROFILE/user.js";echo 'user_pref("network.proxy.socks_remote_dns",true);'>>"$PROFILE/user.js";echo 'user_pref("network.proxy.socks_version",5);'>>"$PROFILE/user.js";};ssh_proxify(){ local SERVER="${1:?No server specified...}";local LPORT="${2:?No local port specified...}";local CONFIG="$HOME/.proxychains/proxychains.conf";shift 2;mkdir -p "$(dirname "$CONFIG")";cat>"$CONFIG"<<EOF
strict_chain
quiet_mode
proxy_dns
[ProxyList]
socks5 127.0.0.1 $LPORT
EOF
ssh_tunnel_open "$SERVER" "D$LPORT"&true&&proxychains "$@";ssh_tunnel_close "$LPORT";};ssh_proxify_ff(){ local PROFILE="$HOME/.mozilla/firefox/profile.proxify";local SERVER="${1:?No server specified...}";local LPORT="${2:?No local port specified...}";shift 2;firefox_set_proxy "$LPORT" "$PROFILE" "proxify";ssh_tunnel_open "$SERVER" "D$LPORT"&true&&firefox -P "proxify" "$@";ssh_tunnel_close "$LPORT";};ssh_torify(){ local SERVER="${1:?No server specified...}";local LPORT="${2:?No local port specified...}";local DADDR="${3:?No tor bind address specified...}";local DPORT="${4:?No tor bind port specified...}";local CONFIG="$HOME/.proxychains/proxychains.conf";shift 4;mkdir -p "$(dirname "$CONFIG")";cat>"$CONFIG"<<EOF
strict_chain
quiet_mode
proxy_dns
[ProxyList]
socks5 127.0.0.1 $LPORT
EOF
ssh_tunnel_open "$SERVER" "L$LPORT:$DADDR:$DPORT"&true;proxychains "$@";ssh_tunnel_close "$LPORT";};ssh_torify_ff(){ local SERVER="${1:?No server specified...}";local LPORT="${2:?No local port specified...}";local DADDR="${3:?No tor bind address specified...}";local DPORT="${4:?No tor bind port specified...}";local PROFILE="$HOME/.mozilla/firefox/profile.tor";shift 4;ssh_tunnel_open "$SERVER" "L$LPORT:$DADDR:$DPORT"&true;firefox_set_proxy "$LPORT" "$PROFILE" "tor";firefox -P "tor";ssh_tunnel_close "$LPORT";};ssh_shuttle(){ local SSH="$(fct_content ssh|sed 's/^\s*command //;s/"$@"//g;s/~/$HOME/g')";SSH="$(eval echo "$SSH")";sshuttle ${SSH:+-e "$SSH"} -r "$@";};ssh_copy_id(){ ssh ${1:?No host specified} -p ${2:?No port specified...} -- sh -c "cat 'command=\"${3:?No command specified...},no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty ${SSH_ORIGINAL_COMMAND#* }\" ${4:?No ssh key specified...}' >> '$HOME/.ssh/authorized_keys'";};ssh_get_server_pubkey(){ local FILE="$(mktemp)";ssh-keyscan host>"$FILE" 2>/dev/null;ssh-keygen -l -f "$FILE";};quvi_get(){ quvi "$@" --exec 'wget %u -O %t.%e';};youtube(){ youtube-dl --geo-bypass --hls-prefer-native -o "%(autonumber)s-%(title)s.%(ext)s" "$@";};youtube_best_mp4(){ youtube-dl --geo-bypass -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best' --merge-output-format mp4 -o "%(autonumber)s-%(title)s.%(ext)s" "$@";};youtube_best_not_webm(){ youtube-dl --geo-bypass -f 'bestvideo[ext!=webm]‌​+bestaudio[ext!=webm]‌​/best[ext!=webm]' -o "%(autonumber)s-%(title)s.%(ext)s" "$@";}